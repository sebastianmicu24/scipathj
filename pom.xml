<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.scipath</groupId>
    <artifactId>scipathj</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>SciPathJ</name>
    <description>Segmentation and Classification of Images, Pipelines for the Analysis of Tissue Histopathology</description>

    <properties>
        <maven.compiler.source>23</maven.compiler.source>
        <maven.compiler.target>23</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Core versions -->
        <imagej.version>2.9.0</imagej.version>
        <tensorflow.version>1.0.0</tensorflow.version>
        <imagej-tensorflow.version>1.1.5</imagej-tensorflow.version>
        
        <!-- UI versions -->
        <flatlaf.version>3.4.1</flatlaf.version>
        
        <!-- Logging -->
        <logback.version>1.4.8</logback.version>
    </properties>

    <repositories>
        <repository>
            <id>imagej.public</id>
            <url>https://maven.imagej.net/content/groups/public</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- ImageJ Core -->
        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>imagej</artifactId>
            <version>${imagej.version}</version>
        </dependency>
        
        <!-- ImageJ1 Core -->
        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>ij</artifactId>
            <version>1.54f</version>
        </dependency>
        
        <!-- ImageJ-ImgLib2 Bridge -->
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2-ij</artifactId>
            <version>2.0.1</version>
        </dependency>
        
        <!-- TensorFlow 2.x -->
        <dependency>
            <groupId>org.tensorflow</groupId>
            <artifactId>tensorflow-core-platform</artifactId>
            <version>${tensorflow.version}</version>
        </dependency>
        <dependency>
            <groupId>org.tensorflow</groupId>
            <artifactId>tensorflow-framework</artifactId>
            <version>${tensorflow.version}</version>
        </dependency>
        
        <!-- Clipper for StarDist -->
        <dependency>
            <groupId>de.lighti</groupId>
            <artifactId>Clipper</artifactId>
            <version>6.4.2</version>
        </dependency>
        
        <!-- UI -->
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>${flatlaf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-swing</artifactId>
            <version>12.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome5-pack</artifactId>
            <version>12.3.1</version>
        </dependency>
        
        <!-- Jackson for JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.15.2</version>
        </dependency>
        
        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        
        <!-- Utilities -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.15</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- Development execution -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <mainClass>com.scipath.scipathj.SciPathJApplication</mainClass>
                    <options>
                        <option>--add-opens=java.base/java.lang=ALL-UNNAMED</option>
                        <option>--add-opens=java.base/java.lang.reflect=ALL-UNNAMED</option>
                        <option>--add-opens=java.base/java.util=ALL-UNNAMED</option>
                        <option>--add-opens=java.base/java.util.concurrent=ALL-UNNAMED</option>
                        <option>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</option>
                    </options>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <!-- Copy dependencies -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.6.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/libs</outputDirectory>
                                    <includeScope>runtime</includeScope>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Extract TensorFlow 2.x natives -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>extract-natives</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/lib"/>
                                        <!-- TensorFlow 2.x natives are included in tensorflow-core-platform -->
                                        <unzip dest="${project.build.directory}/natives-temp">
                                            <fileset dir="${settings.localRepository}/org/tensorflow">
                                                <include name="**/tensorflow-core-platform-${tensorflow.version}*.jar"/>
                                            </fileset>
                                        </unzip>
                                        <copy todir="${project.build.directory}/lib" flatten="true" failonerror="false">
                                            <fileset dir="${project.build.directory}/natives-temp">
                                                <include name="**/*.dll"/>
                                                <include name="**/*.so"/>
                                                <include name="**/*.dylib"/>
                                            </fileset>
                                        </copy>
                                        <delete dir="${project.build.directory}/natives-temp"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- JPackage -->
                    <plugin>
                        <groupId>org.panteleyev</groupId>
                        <artifactId>jpackage-maven-plugin</artifactId>
                        <version>1.6.5</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jpackage</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <name>SciPathJ</name>
                            <appVersion>${project.version}</appVersion>
                            <vendor>SciPath</vendor>
                            <description>Segmentation and Classification of Images, Pipelines for the Analysis of Tissue Histopathology</description>
                            
                            <destination>${project.build.directory}/dist</destination>
                            <input>${project.build.directory}</input>
                            <mainJar>${project.build.finalName}.jar</mainJar>
                            <mainClass>com.scipath.scipathj.SciPathJApplication</mainClass>
                            
                            <type>EXE</type>
                            <winMenu>true</winMenu>
                            <winShortcut>true</winShortcut>
                            <icon>src/main/resources/icons/scipathj.ico</icon>
                            
                            <!-- Include dependencies and natives -->
                            <appContent>
                                <additionalContent>
                                    <name>libs</name>
                                    <source>${project.build.directory}/libs</source>
                                </additionalContent>
                                <additionalContent>
                                    <name>lib</name>
                                    <source>${project.build.directory}/lib</source>
                                </additionalContent>
                            </appContent>
                            
                            <!-- JVM options for TensorFlow and Java 21 compatibility -->
                            <javaOptions>
                                <javaOption>-Xmx8G</javaOption>
                                <javaOption>-Xms2G</javaOption>
                                <javaOption>--add-opens=java.base/java.lang=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.base/java.lang.reflect=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.base/java.util=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.base/java.util.concurrent=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.base/java.nio=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.base/sun.nio.fs=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.base/java.io=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.base/java.net=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.desktop/sun.awt=ALL-UNNAMED</javaOption>
                                <javaOption>--add-opens=java.desktop/sun.java2d=ALL-UNNAMED</javaOption>
                                <javaOption>-Djava.library.path=$APPDIR/lib</javaOption>
                                <javaOption>-Dorg.tensorflow.NativeLibrary.MODE=bundled</javaOption>
                                <javaOption>-Djna.library.path=$APPDIR/lib</javaOption>
                                <javaOption>-Dfile.encoding=UTF-8</javaOption>
                                <javaOption>-Dsun.java2d.d3d=false</javaOption>
                                <javaOption>-Dsun.java2d.opengl=false</javaOption>
                                <javaOption>-Dswing.aatext=true</javaOption>
                                <javaOption>-Dawt.useSystemAAFontSettings=on</javaOption>
                            </javaOptions>
                            
                            <verbose>true</verbose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>